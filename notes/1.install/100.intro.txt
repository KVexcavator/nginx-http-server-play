example code
https://github.com/PacktPublishing/NGINX-HTTP-Server_Fifth-edition
===================================
https://www.netcraft.com/
https://www.nginx.com/resources/wiki/
=======================================
Загрузка и извлечение
mkdir src && cd src
wget https://nginx.org/download/nginx-1.25.2.tar.gz
tar zxf nginx-1.25.2.tar.gz
=======================================
Варианты настройки компиляции
Обычно при сборке приложения из исходного кода есть три шага — настройка, компиляция и установка. Шаг настройки позволяет выбрать ряд параметров, которые не будут доступны для редактирования после сборки программы, поскольку они напрямую влияют на двоичные файлы проекта.

Использование configure:
$ cd src/nginx-1.25.2
$ sudo su
# ./configure
# make
# make install
локация для установки по умолчанию /usr/local/nginx
опции:
# ./configure --conf-path=/etc/nginx/nginx.conf
# ./configure [...] --with-openssl=/usr/lib64

Компиляция и установка
После успешного выполнения скрипта настройки вы можете приступить к компиляции NGINX. Компиляция проекта эквивалентна выполнению команды make в исходном каталоге проекта:
$ make
Успешная сборка должна привести к появлению финального сообщения: make[1]: leaving directory с указанием исходного пути проекта.
$ sudo su
# make install
-----------------------------------------------
NGINX — это демон. Следовательно, при запуске NGINX на экране не появится никакого текста, а приглашение вернется немедленно.
-----------------------------------------------
Пользователи и группы
Очень распространенным источником проблем при настройке NGINX являются недействительные права доступа к файлам — из-за неправильной настройки пользователя или группы вы часто получаете ошибки HTTP 403 Forbidden, поскольку NGINX не может получить доступ к запрошенным файлам.
Существует два уровня процессов с возможно разными наборами разрешений:
• Главный процесс NGINX: он должен быть запущен как root. В большинстве Unix-подобных систем процессы, запущенные с учетной записью root, могут открывать TCP-сокеты на любом порту, тогда как другие пользователи могут открывать прослушиваемые сокеты только на порту выше 1024. Если вы не запустите NGINX как root, стандартные порты, такие как 80 или 443, будут недоступны.
• Рабочие процессы NGINX: они автоматически порождаются главным процессом под учетной записью, которую вы указали в файле конфигурации с помощью директивы user. Настройка конфигурации имеет приоритет над переключателем конфигурации, который вы могли указать во время компиляции. Если вы не указали ни один из них, рабочие процессы будут запущены как пользователь nobody, а группа будет nobody (или nogroup, в зависимости от вашей ОС).
------------------------------------------
Параметры командной строки NGINX
Двоичный файл NGINX принимает аргументы командной строки для выполнения различных операций, среди которых управление фоновыми процессами. Чтобы получить полный список команд, вы можете вызвать экран Help, используя следующие команды:
$ cd /usr/local/nginx/sbin
$ ./nginx -h
==
nginx version: nginx/1.25.2
Usage: nginx [-?hvVtTq] [-s signal] [-p prefix]
             [-e filename] [-c filename] [-g directives]

Options:
  -?,-h         : this help
  -v            : show version and exit
  -V            : show version and configure options then exit
  -t            : test configuration and exit
  -T            : test configuration, dump it and exit
  -q            : suppress non-error messages during configuration testing
  -s signal     : send signal to a master process: stop, quit, reopen, reload
  -p prefix     : set prefix path (default: /usr/local/nginx/)
  -e filename   : set error log file (default: logs/error.log)
  -c filename   : set configuration file (default: conf/nginx.conf)
  -g directives : set global directives out of configuration file
==
=====================================================
Запуск и остановка демона
Вы можете запустить NGINX, запустив двоичный файл NGINX из /usr/local/nginx/sbin без каких-либо переключателей. Если демон уже запущен, появится сообщение:
emerg]: bind() to 0.0.0.0:80 failed (98: Address already in use)
[...] [emerg]: still could not bind().
-----------------------------------
Команды:
nginx -s stop    Stops the daemon immediately (using the TERM signal)
nginx -s quit    Stops the daemon gracefully (using the QUIT signal)
nginx -s reopen  Reopens log files
nginx -s reload  Reloads the configuration
------------------------------------
Если надо принудительно:
# killall nginx
==============================================
Тестирование конфигурации:
для проверки синтаксиса, корректности и целостности конфигурации:
$ /usr/local/nginx/sbin/nginx -t
!!!Манипулирование файлами конфигурации опасно, пока сервер находится в эксплуатации. Лучше всего поместить новую конфигурацию в отдельный временный файл и запустить тест на этом файле. NGINX делает это возможным, предлагая ключ -c:
$ ./nginx -t -c /home/user/test.conf
Эта команда проанализирует /home/user/test.conf и убедится, что это действительный файл конфигурации NGINX. После успешной проверки требуется заменить текущий файл конфигурации и перезагрузить конфигурацию сервера:
$ cp -i /home/user/test.conf usr/local/nginx/conf/nginx.conf
cp: erase 'nginx.conf' ? yes
$ ./nginx -s reload
=======================================
Дополнительные переключатели:
Смотрим версию подробно, сто там прикрученно:
./nginx -V
Параметр -g позволяет указать дополнительные директивы конфигурации, если они не были включены в файл конфигурации:
$ ./nginx -g "timer_resolution 200ms";

